plugins {
    id 'application'
    id 'java'
    id 'com.google.protobuf' version '0.9.4'
}

group = 'ru.otus'
version = '0.0.1-SNAPSHOT'

def grpcVersion = '1.64.0'
def protobufVersion = '3.25.1'
def protocVersion = protobufVersion
def javaxVersion = '1.3.2'

java {
    sourceCompatibility = '17'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation "io.grpc:grpc-protobuf:${grpcVersion}"
    implementation "io.grpc:grpc-services:${grpcVersion}"
    implementation "io.grpc:grpc-stub:${grpcVersion}"
	implementation "javax.annotation:javax.annotation-api:${javaxVersion}"
    runtimeOnly "io.grpc:grpc-netty-shaded:${grpcVersion}"

}

sourceSets {
    main {
        java {
            srcDirs 'build/generated/source/proto/main/grpc'
            srcDirs 'build/generated/source/proto/main/java'
        }
    }
}

protobuf {
    protoc { artifact = "com.google.protobuf:protoc:${protocVersion}" }
    plugins {
        grpc { artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}" }
    }
    generateProtoTasks {
        all()*.plugins { grpc {} }
    }
}

startScripts.enabled = false

tasks.register('ReflectionServer', CreateStartScripts) {
    mainClass = 'io.grpc.examples.reflection.ReflectionServer'
    applicationName = 'reflection-server'
    outputDir = new File(project.buildDir, 'tmp/scripts/' + name)
    classpath = startScripts.classpath
}

application {
    applicationDistribution.into('bin') {
        from(ReflectionServer)
        fileMode = 0755
    }
}